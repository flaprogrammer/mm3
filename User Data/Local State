{
   "apps": {
      "app_launcher": {
         "should_show_apps_page": false
      }
   },
   "browser": {
      "hung_plugin_detect_freq": 2000,
      "last_redirect_origin": "",
      "plugin_message_response_timeout": 25000
   },
   "http_original_content_length": "141717",
   "http_received_content_length": "141717",
   "local_state": {
      "multiple_profile_prefs_version": 7
   },
   "ntp": {
      "promo_resource_cache_update": "1402697855.195886"
   },
   "policy": {
      "last_statistics_update": "13047171450191520"
   },
   "profile": {
      "info_cache": {
         "Default": {
            "avatar_icon": "chrome://theme/IDR_PROFILE_AVATAR_0",
            "background_apps": false,
            "is_managed": false,
            "name": "First user",
            "user_name": ""
         }
      },
      "last_used": "Default"
   },
   "shutdown": {
      "num_processes": 1,
      "num_processes_slow": 0,
      "type": 1
   },
   "uninstall_metrics": {
      "installation_date2": "1402697850",
      "launch_count": "1"
   },
   "user_experience_metrics": {
      "low_entropy_source": 4852,
      "session_id": 0,
      "stability": {
         "breakpad_registration_fail": 0,
         "breakpad_registration_ok": 0,
         "crash_count": 0,
         "debugger_not_present": 1,
         "debugger_present": 0,
         "exited_cleanly": true,
         "incomplete_session_end_count": 0,
         "last_timestamp_sec": "1402697875",
         "launch_count": 1,
         "launch_time_sec": "1402697850",
         "page_load_count": 0,
         "renderer_crash_count": 0,
         "renderer_hang_count": 0,
         "session_end_completed": true,
         "stats_buildtime": "1369764348",
         "stats_version": "27.0.1453.110"
      }
   },
   "variations_last_fetch_time": "13047171456640886",
   "variations_seed": "",
   "variations_seed_date": "13047171453000000",
   "was": {
      "restarted": false
   }
}
